package Interfaces;



/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import MainClass.SistemaArchivos;
import java.util.Enumeration;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.MutableTreeNode;
import javax.swing.tree.TreeNode;
import javax.swing.tree.TreePath;

// Proyecto.pkg2.pkg2425.pkg2.so.victoriagarcia.Proyecto224252SOVictoriaGarcia.java;

public class Pantalla extends javax.swing.JFrame {

    /**
     * Creates new form Pantalla
     */
    public SistemaArchivos sistema;
    public DefaultMutableTreeNode root;
    
    public Pantalla( SistemaArchivos sistema) {
        root = new DefaultMutableTreeNode(sistema.getRaiz().getNombre()); 
        initComponents();
        this.setLocationRelativeTo(null);
        this.sistema = sistema;
        jlabelAdminUser.setText("MODO: USUARIO");
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        ComboBoxCRUD = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldNombreB = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtreeArchivos = new javax.swing.JTree(root);
        jSpinnerTamanoArchivo = new javax.swing.JSpinner();
        jButton3 = new javax.swing.JButton();
        jlabelAdminUser = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jlabelCrearArchivo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 204, 255));

        jLabel1.setText("Seleccionar Opcion");

        ComboBoxCRUD.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Crear", "Leer", "Actualizar", "Eliminar" }));
        ComboBoxCRUD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxCRUDActionPerformed(evt);
            }
        });

        jLabel2.setText("Tama√±o Archivo:");

        jTextFieldNombreB.setText("jTextField1");
        jTextFieldNombreB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNombreBActionPerformed(evt);
            }
        });

        jButton1.setText("Carpeta");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Archivo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Carp:");

        jLabel4.setText("Arch:");

        jtreeArchivos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtreeArchivosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtreeArchivos);

        jButton3.setText("Cambiar a vista de Admin/Usuario");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jlabelAdminUser.setText("DefaultText");

        jLabel6.setText("Nombre:");

        jlabelCrearArchivo.setText("Status: OK");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jlabelAdminUser, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGap(131, 131, 131)
                                        .addComponent(jLabel5))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGap(37, 37, 37)
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jSpinnerTamanoArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGap(43, 43, 43)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(jLabel6)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(jTextFieldNombreB, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(ComboBoxCRUD, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 19, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(jlabelCrearArchivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(93, 93, 93))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jButton1)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton2)
                                        .addGap(43, 43, 43)))))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ComboBoxCRUD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldNombreB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jSpinnerTamanoArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jLabel3)
                            .addComponent(jButton2)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jlabelCrearArchivo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jlabelAdminUser)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        // Definir permisos
        String permisos;
        TreePath tp = jtreeArchivos.getSelectionPath();

        if (tp != null) {
            String ruta = tp.toString();

            if (sistema.isEsAdministrador()) {
                permisos = "RW";
            } else {
                permisos = "C";
            }

            // Comprobar si seleccionamos "Crear" en el ComboBox
            if (ComboBoxCRUD.getSelectedItem().toString().equals("Crear")) {
                // Tomar el nombre del directorio desde el JTextField
                String nombreDirectorio = jTextFieldNombreB.getText();

                // Intentar crear el directorio usando la l√≥gica de backend
                boolean status = sistema.crearDirectorio(ruta, nombreDirectorio);

                if (status) {
                    // Si se cre√≥ correctamente, mostrar mensaje
                    jlabelCrearArchivo.setText("Directorio creado con √©xito");

                    // Agregar el directorio como "parent" en el JTree
                    DefaultTreeModel model = (DefaultTreeModel) jtreeArchivos.getModel();
                    DefaultMutableTreeNode root = (DefaultMutableTreeNode) model.getRoot();

                    // Crear el nuevo nodo para el directorio
                    DefaultMutableTreeNode newDirNode = new DefaultMutableTreeNode(nombreDirectorio);

                    // Agregar el nuevo directorio como hijo del "root"
                    root.add(newDirNode);

                    // Refrescar el modelo del JTree para que el cambio sea visible
                    model.reload(root);
                } else {
                    jlabelCrearArchivo.setText("Error al crear Directorio");
                }
            }
        }
        
        
//            if (ComboBoxCRUD.getSelectedItem() == "Eliminar"){
//                boolean status;
//                
//                int tamano = (int) jSpinnerTamanoArchivo.getValue();
//                
//                    
//                status = sistema.eliminarDirectorio(ruta,jTextFieldNombreB.getText()
//                ,tamano, permisos);
//
//                if (status){
//                 
//                    jlabelCrearArchivo.setText("Directorio Eliminado con exito");
//                }else{
//                   jlabelCrearArchivo.setText("Error al eiminar Directorio");
//                }
//
//            }
//            if (ComboBoxCRUD.getSelectedItem() == "Actualizar"){
//                boolean status;
//                
//                int tamano = (int) jSpinnerTamanoArchivo.getValue();
//                
//                    
//                status = sistema.eliminarArchivo(ruta,jTextFieldNombreB.getText()
//                ,tamano, permisos);
//
//                if (status){
//                 
//                    jlabelCrearArchivo.setText("Editado con exito");
//                }else{
//                   jlabelCrearArchivo.setText("Error al editar");
//                }
//
//            }
            //if combobox = eliminar o if combobox = leer o if combobox = editar
                                               
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ComboBoxCRUDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxCRUDActionPerformed
      
    }//GEN-LAST:event_ComboBoxCRUDActionPerformed

    private void jTextFieldNombreBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNombreBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNombreBActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        //If combobox Crear sistema.crearArchivo 2cosas:
        String permisos;
        TreePath tp = jtreeArchivos.getSelectionPath();
        if(tp != null){
            String ruta = tp.toString();
            if (sistema.isEsAdministrador()){
                    permisos = "RW";
                }else{
                    permisos = "C";
                }
            if (ComboBoxCRUD.getSelectedItem() == "Crear"){
                boolean status;
                
                int tamano = (int) jSpinnerTamanoArchivo.getValue();
                
                    
                status = sistema.crearArchivo(ruta,jTextFieldNombreB.getText()
                ,tamano, permisos);

                if (status){
                    
                    DefaultTreeModel model = (DefaultTreeModel) jtreeArchivos.getModel();
                    DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) tp.getLastPathComponent();
                    DefaultMutableTreeNode newNode = new DefaultMutableTreeNode(jTextFieldNombreB.getText());
                    selectedNode.add(newNode);
                    model.reload(selectedNode);
//                    
                    //agregar el nodo nuevo al jtree: crear un DefaultMutableTreeNode y agregarlo como hijo al nodo correspondiente
                    jlabelCrearArchivo.setText("Creado con exito");
                }else{
                   jlabelCrearArchivo.setText("Error al crear");
                }

            }
            if (ComboBoxCRUD.getSelectedItem() == "Eliminar"){
                boolean status = sistema.eliminarArchivo(ruta, jTextFieldNombreB.getText(), 0, permisos);

                if (status) {
                    jlabelCrearArchivo.setText("Eliminado con √©xito");
                    // Obtenemos el nodo seleccionado (el directorio)
                    DefaultTreeModel model = (DefaultTreeModel) jtreeArchivos.getModel();
                    DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) tp.getLastPathComponent();
                    // Buscar el hijo con el nombre ingresado
                    Enumeration<TreeNode> children = selectedNode.children();
                    boolean found = false;
                    while (children.hasMoreElements()) {
                        DefaultMutableTreeNode child = (DefaultMutableTreeNode) children.nextElement();
                        if (child.toString().equalsIgnoreCase(jTextFieldNombreB.getText().trim())) {
                            selectedNode.remove(child);
                            found = true;
                            break;
                        }
                    }    
                    if (found) {
                        model.reload(selectedNode); // Recargar el padre para reflejar el cambio
                    } else {
                        jlabelCrearArchivo.setText("No se encontr√≥ el archivo a eliminar");
                    }
                    
                }else{
                   jlabelCrearArchivo.setText("Error al eiminar");
                }

            }
        } else {
            jlabelCrearArchivo.setText("Selecciona un directorio");
    }        
//            if (ComboBoxCRUD.getSelectedItem() == "Actualizar"){
//                boolean status;
//                
//                int tamano = (int) jSpinnerTamanoArchivo.getValue();
//                
//                    
//                status = sistema.eliminarArchivo(ruta,jTextFieldNombreB.getText()
//                ,tamano, permisos);
//
//                if (status){
//                 
//                    jlabelCrearArchivo.setText("Editado con exito");
//                }else{
//                   jlabelCrearArchivo.setText("Error al editar");
//                }
//
//            }
            //if combobox = eliminar o if combobox = leer o if combobox = editar
          
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        sistema.cambiarModo();
        if(sistema.isEsAdministrador()){
            jlabelAdminUser.setText("MODO: ADMINISTRADOR");
        }else{
            jlabelAdminUser.setText("MODO: USUARIO");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jtreeArchivosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtreeArchivosMouseClicked

    }//GEN-LAST:event_jtreeArchivosMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pantalla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pantalla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pantalla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pantalla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SistemaArchivos sistema = new SistemaArchivos(20);
                new Pantalla(sistema).setVisible(true);
            }
        });
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBoxCRUD;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinnerTamanoArchivo;
    private javax.swing.JTextField jTextFieldNombreB;
    private javax.swing.JLabel jlabelAdminUser;
    private javax.swing.JLabel jlabelCrearArchivo;
    private javax.swing.JTree jtreeArchivos;
    // End of variables declaration//GEN-END:variables
}
